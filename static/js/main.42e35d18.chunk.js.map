{"version":3,"sources":["Books.js","AddBook.js","App.js","index.js"],"names":["Book","books","deleteFromState","changeRead","bookList","map","book","className","key","id","title","author","pages","read","checked","onClick","type","createCheckBox","AddBook","state","changeFormDisplay","form","document","querySelector","style","display","handleChange","e","setState","target","name","value","changeDelButtonDisplay","delButtons","querySelectorAll","button","handleSubmit","preventDefault","props","addToState","reset","onSubmit","this","htmlFor","onChange","required","Component","App","Math","random","filter","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.42e35d18.chunk.js","sourcesContent":["import React from \"react\"\r\nconst Book = ({ books, deleteFromState, changeRead }) => {\r\n    const createCheckBox = (book) => {\r\n        if (book.read === \"Read\")\r\n            return <input checked onClick={() => { changeRead(book.id) }} type=\"checkbox\" />\r\n        else\r\n            return <input onClick={() => { changeRead(book.id) }} type=\"checkbox\" />\r\n    }\r\n    const bookList = books.map((book) => {\r\n        return (\r\n\r\n            <div className=\"book\" key={book.id}>\r\n                <h1>Title:{book.title}</h1>\r\n                <h1>Author:{book.author}</h1>\r\n                <h1>Page Number:{book.pages}</h1>\r\n                <div id=\"readDiv\">\r\n                    <h1>{book.read}</h1>\r\n                    <label className=\"switch\">\r\n                        {createCheckBox(book)}\r\n                        <span className=\"slider round\"></span>\r\n                    </label>\r\n                </div>\r\n\r\n\r\n                <button onClick={() => { deleteFromState(book.id) }} className=\"delete\">Delete</button>\r\n            </div>\r\n\r\n        )\r\n    })\r\n    return (\r\n        <div id=\"books\">\r\n            {bookList}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Book","import React, { Component } from \"react\"\r\nclass AddBook extends Component {\r\n    state = {\r\n        title: null,\r\n        author: null,\r\n        pages: null,\r\n        read: null,\r\n        id: null\r\n    }\r\n    changeFormDisplay = () => {\r\n        const form = document.querySelector(\"#form\")\r\n        if (form.style.display !== \"block\")\r\n            form.style.display = \"block\"\r\n        else\r\n            form.style.display = \"none\"\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n\r\n    }\r\n    changeDelButtonDisplay = () => {\r\n        const delButtons = document.querySelectorAll(\".delete\")\r\n        for (let button of delButtons) {\r\n            if (button.style.display !== \"block\")\r\n                button.style.display = \"block\"\r\n            else\r\n                button.style.display = \"none\"\r\n        }\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.addToState(this.state)\r\n        this.changeFormDisplay()\r\n        e.target.reset()\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id=\"form\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <div>\r\n                            <label htmlFor=\"title\">Title</label>\r\n                            <input onChange={this.handleChange} name=\"title\" type=\"text\" required />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"author\">Author</label>\r\n                            <input onChange={this.handleChange} name=\"author\" type=\"text\" required />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"pages\">Page Numbers</label>\r\n                            <input onChange={this.handleChange} name=\"pages\" type=\"number\" required />\r\n                        </div>\r\n                        <div id=\"readDiv\">\r\n                            <label id=\"readLabel\" htmlFor=\"Read\">Read</label>\r\n                            <input id=\"read\" onChange={this.handleChange} name=\"read\" type=\"checkbox\" />\r\n                        </div>\r\n                        <button id=\"addABook\">Add</button>\r\n                        <button onClick={this.changeFormDisplay} id=\"cancel\">Cancel</button>\r\n                    </form>\r\n\r\n\r\n                </div>\r\n                <div id=\"buttons\">\r\n                    <button onClick={this.changeFormDisplay} id=\"submit\">Submit</button>\r\n                    <button onClick={this.changeDelButtonDisplay} id=\"delete\">Delete</button>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\nexport default AddBook","import React, { Component } from \"react\"\nimport Book from \"./Books\"\nimport AddBook from \"./AddBook\"\nclass App extends Component {\n    state = {\n        books: [{\n            title: \"The Martian\",\n            author: \"Andy Weir\",\n            pages: 375,\n            read: \"Read\",\n            id: 1\n        },\n        {\n            title: \"The Hobbit\",\n            author: \"Jrr Tolkien\",\n            pages: 295,\n            read: \"Not read\",\n            id: 2\n        }\n        ]\n    }\n    addToState = (book) => {\n        book.id = Math.random()\n        if (book.read === \"on\")\n            book.read = \"Read\"\n        else\n            book.read = \"Not read\"\n        const books = [...this.state.books, book]\n        this.setState({\n            books\n        })\n    }\n    deleteFromState = (id) => {\n        const books = this.state.books.filter(book => {\n            return book.id !== id\n        })\n        this.setState({\n            books\n        })\n        const delButtons = document.querySelectorAll(\".delete\")\n        for (let delbutton of delButtons)\n            delbutton.style.display = \"none\"\n    }\n    changeRead = (id) => {\n        const books = this.state.books.filter(book => {\n            if (book.id === id) {\n                if (book.read === \"Read\")\n                    book.read = \"Not read\"\n                else\n                    book.read = \"Read\"\n            }\n\n            return book\n        })\n        this.setState({\n            books\n        })\n\n    }\n    render() {\n        return (\n            <div>\n                <Book changeRead={this.changeRead} deleteFromState={this.deleteFromState} books={this.state.books}></Book>\n\n                <AddBook addToState={this.addToState} ></AddBook>\n            </div>\n        )\n    }\n\n\n}\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./App\"\r\nimport \"./index.css\"\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}